//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WK.TaxFormalizer.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class STO4DBEntities : DbContext
    {
        public STO4DBEntities()
            : base("name=STO4DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DIVISIONT> DIVISIONTs { get; set; }
        public virtual DbSet<ENTITYT> ENTITYTs { get; set; }
        public virtual DbSet<TransErrorLogT> TransErrorLogTs { get; set; }
        public virtual DbSet<TransItemAT> TransItemATs { get; set; }
        public virtual DbSet<TransItemT> TransItemTs { get; set; }
        public virtual DbSet<TransItemTaxT> TransItemTaxTs { get; set; }
        public virtual DbSet<TransLogT> TransLogTs { get; set; }
        public virtual DbSet<TransTaxOnTaxT> TransTaxOnTaxTs { get; set; }
        public virtual DbSet<USERPROFILET> USERPROFILETs { get; set; }
        public virtual DbSet<TaxonTaxT> TaxonTaxTs { get; set; }
        public virtual DbSet<TransactionTypeT> TransactionTypeTs { get; set; }
        public virtual DbSet<TransTaxT> TransTaxTs { get; set; }
        public virtual DbSet<TransactionStatusT> TransactionStatusTs { get; set; }
        public virtual DbSet<CustomerT> CustomerTs { get; set; }
        public virtual DbSet<ExemptionClassT> ExemptionClassTs { get; set; }
        public virtual DbSet<Geocode1T> Geocode1T { get; set; }
        public virtual DbSet<Geocode2T> Geocode2T { get; set; }
        public virtual DbSet<ProductGroupT> ProductGroupTs { get; set; }
        public virtual DbSet<ProductItemT> ProductItemTs { get; set; }
        public virtual DbSet<ProviderT> ProviderTs { get; set; }
        public virtual DbSet<ReleaseT> ReleaseTs { get; set; }
        public virtual DbSet<TaxabilityStateT> TaxabilityStateTs { get; set; }
        public virtual DbSet<TaxabilityT> TaxabilityTs { get; set; }
        public virtual DbSet<TaxAuthorityT> TaxAuthorityTs { get; set; }
        public virtual DbSet<TaxAuthorityTaxT> TaxAuthorityTaxTs { get; set; }
        public virtual DbSet<TaxCatT> TaxCatTs { get; set; }
        public virtual DbSet<TaxJurisdictionT> TaxJurisdictionTs { get; set; }
        public virtual DbSet<TaxOverrideReasonT> TaxOverrideReasonTs { get; set; }
        public virtual DbSet<TaxRateT> TaxRateTs { get; set; }
        public virtual DbSet<TaxTypeT> TaxTypeTs { get; set; }
        public virtual DbSet<ExemptionClassesT> ExemptionClassesTs { get; set; }
        public virtual DbSet<FOBTypeT> FOBTypeTs { get; set; }
        public virtual DbSet<LiabilityTypeT> LiabilityTypeTs { get; set; }
        public virtual DbSet<MailOrderTypeT> MailOrderTypeTs { get; set; }
        public virtual DbSet<NonTaxReasonT> NonTaxReasonTs { get; set; }
        public virtual DbSet<TransLog1> TransLog1 { get; set; }
        public virtual DbSet<LOCATIONT> LOCATIONTs { get; set; }
        public virtual DbSet<TaxabilityOverrideT> TaxabilityOverrideTs { get; set; }
        public virtual DbSet<CanRejectDeliveryTypeT> CanRejectDeliveryTypeTs { get; set; }
        public virtual DbSet<DeliveryByTypeT> DeliveryByTypeTs { get; set; }
        public virtual DbSet<ShipFromPOBTypeT> ShipFromPOBTypeTs { get; set; }
        public virtual DbSet<SolicitedOutsideTypeT> SolicitedOutsideTypeTs { get; set; }
        public virtual DbSet<TransItem5> TransItem5 { get; set; }
        public virtual DbSet<TransItemTax2> TransItemTax2 { get; set; }
        public virtual DbSet<TransTax2> TransTax2 { get; set; }
        public virtual DbSet<AddressT> AddressTs { get; set; }
        public virtual DbSet<CountryT> CountryTs { get; set; }
        public virtual DbSet<StateT> StateTs { get; set; }
        public virtual DbSet<TransactionInvoiceMappingT> TransactionInvoiceMappingTs { get; set; }
    }
}
