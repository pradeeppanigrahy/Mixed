//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WK.TaxFormalizer.Data
{
    using System;
    using System.Collections.Generic;
    
    public partial class ReleaseT
    {
        public ReleaseT()
        {
            this.CustomerTs = new HashSet<CustomerT>();
            this.Geocode1T = new HashSet<Geocode1T>();
            this.Geocode2T = new HashSet<Geocode2T>();
            this.ProviderTs = new HashSet<ProviderT>();
            this.TaxabilityStateTs = new HashSet<TaxabilityStateT>();
            this.TaxabilityTs = new HashSet<TaxabilityT>();
            this.TaxAuthorityTs = new HashSet<TaxAuthorityT>();
            this.TaxAuthorityTaxTs = new HashSet<TaxAuthorityTaxT>();
            this.TaxCatTs = new HashSet<TaxCatT>();
            this.TaxJurisdictionTs = new HashSet<TaxJurisdictionT>();
            this.TaxonTaxTs = new HashSet<TaxonTaxT>();
            this.TaxOverrideReasonTs = new HashSet<TaxOverrideReasonT>();
            this.TaxRateTs = new HashSet<TaxRateT>();
            this.TaxTypeTs = new HashSet<TaxTypeT>();
            this.TransactionTypeTs = new HashSet<TransactionTypeT>();
            this.CountryTs = new HashSet<CountryT>();
            this.StateTs = new HashSet<StateT>();
        }
    
        public int ReleaseNo { get; set; }
        public Nullable<int> VersionID { get; set; }
        public Nullable<int> ReleaseID { get; set; }
        public Nullable<System.DateTime> EffectiveDate { get; set; }
    
        public virtual ICollection<CustomerT> CustomerTs { get; set; }
        public virtual ICollection<Geocode1T> Geocode1T { get; set; }
        public virtual ICollection<Geocode2T> Geocode2T { get; set; }
        public virtual ICollection<ProviderT> ProviderTs { get; set; }
        public virtual ICollection<TaxabilityStateT> TaxabilityStateTs { get; set; }
        public virtual ICollection<TaxabilityT> TaxabilityTs { get; set; }
        public virtual ICollection<TaxAuthorityT> TaxAuthorityTs { get; set; }
        public virtual ICollection<TaxAuthorityTaxT> TaxAuthorityTaxTs { get; set; }
        public virtual ICollection<TaxCatT> TaxCatTs { get; set; }
        public virtual ICollection<TaxJurisdictionT> TaxJurisdictionTs { get; set; }
        public virtual ICollection<TaxonTaxT> TaxonTaxTs { get; set; }
        public virtual ICollection<TaxOverrideReasonT> TaxOverrideReasonTs { get; set; }
        public virtual ICollection<TaxRateT> TaxRateTs { get; set; }
        public virtual ICollection<TaxTypeT> TaxTypeTs { get; set; }
        public virtual ICollection<TransactionTypeT> TransactionTypeTs { get; set; }
        public virtual ICollection<CountryT> CountryTs { get; set; }
        public virtual ICollection<StateT> StateTs { get; set; }
    }
}
